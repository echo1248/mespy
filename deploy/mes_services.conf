; ======================
; 基础模板（必须包含有效command）
; ======================
[program:mes_template]
; 必须的指令
command     = /bin/true
directory   = /tmp

; 通用配置
user        = root
autostart   = false  ; 禁止自动启动
autorestart = false  ; 禁止自动重启
startsecs   = 10
stopwaitsecs = 60
startretries = 5
stopasgroup=true
killasgroup=true
redirect_stderr = true
stdout_logfile_maxbytes = 50MB
stdout_logfile_backups = 10

; 环境变量模板
environment =
    LC_ALL="en_US.UTF-8"

; ======================
;  服务
; ======================
[program:mes_8000]
extends     = mes_template
directory   = /opt/mes/service/mespy/backend
command     = /opt/mes/service/mespy/.venv/bin/granian main:app --interface asgi --host 0.0.0.0 --port 8000 --workers 1 --runtime-threads 2 --backlog 1024 --workers-kill-timeout 120 --backpressure 2000 --no-reload --log --log-level debug
stdout_logfile = /opt/mes/deploy_logs/mes_service_8000.log
autostart   = true   ; 确保子服务自动启动
autorestart = true   ; 确保子服务自动重启
environment =
    PYTHONPATH="/opt/mes/service/jiqid-py/jiqidpy",
    SERVICE_NAME="mes_8000"

; ======================
;  服务
; ======================
[program:mes_8100]
extends     = mes_template
directory   = /opt/mes/service/mespy/backend
command     = /opt/mes/service/mespy/.venv/bin/granian main:app --interface asgi --host 0.0.0.0 --port 8100 --workers 1 --runtime-threads 2 --backlog 1024 --workers-kill-timeout 120 --backpressure 2000 --no-reload --log --log-level debug
stdout_logfile = /opt/mes/deploy_logs/mes_service_8100.log
autostart   = true   ; 确保子服务自动启动
autorestart = true   ; 确保子服务自动重启
environment =
    PYTHONPATH="/opt/mes/service/jiqid-py/jiqidpy",
    SERVICE_NAME="mes_8100"

; ======================
; 服务组
; sudo supervisorctl start mes_services:   # 启动组内所有服务
; sudo supervisorctl stop mes_services:    # 停止组内所有服务
; sudo supervisorctl restart mes_services: # 重启组内所有服务
; ======================
[group:mes_services]
programs    = mes_8000, mes_8100
priority    = 900